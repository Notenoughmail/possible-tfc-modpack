farmlandMakesTheBestRaceTracks = false

[general]
	#Enable nether portal creation
	enableNetherPortals = false
	#Forces a number of game rules to specific values.
	#  naturalRegeneration = false (Health regen is much slower and not tied to extra saturation)
	#  doInsomnia = false (No phantoms)
	#  doTraderSpawning = false (No wandering traders)
	#  doPatrolSpawning = false (No pillager patrols)
	enableForcedTFCGameRules = true
	#Enable fire arrows and fireballs to spread fire and light blocks.
	enableFireArrowSpreading = true
	#Base probability for a firestarter to start a fire. May change based on circumstances
	#Range: 0.0 ~ 1.0
	fireStarterChance = 0.5

[blocks]

	[blocks.farmland]
		#If TFC soil blocks are able to be created into farmland using a hoe.
		enableFarmlandCreation = true

	[blocks.grassPath]
		#If TFC soil blocks are able to be created into (grass) path blocks using a hoe.
		enableGrassPathCreation = true

	[blocks.rootedDirt]
		#If TFC rooted dirt blocks are able to be created into dirt blocks using a hoe.
		enableRootedDirtToDirtCreation = true

	[blocks.snow]
		#[Requires MC Restart] If snow will slow players that move on top of it similar to soul sand or honey.
		enableSnowSlowEntities = true
		#The chance that snow will accumulate during a storm. Lower values = faster snow accumulation, but also more block updates (aka lag).
		#Range: > 1
		snowAccumulateChance = 20
		#The chance that snow will melt during a storm. Lower values = faster snow melting, but also more block updates (aka lag).
		#Range: > 1
		snowMeltChance = 36

	[blocks.plants]
		#Chance for a plant to grow each random tick, does not include crops. Lower = slower growth. Set to 0 to disable random plant growth.
		#Range: 0.0 ~ 1.0
		plantGrowthChance = 0.05

	[blocks.leaves]
		#If leaves will slow entities passing through them and reduce fall damage.
		enableLeavesSlowEntities = true

	[blocks.cobblestone]
		#If mossy rock blocks will spread their moss to nearby rock blocks (bricks and cobble; stairs, slabs and walls thereof).
		enableMossyRockSpreading = true
		#The rate at which rock blocks will accumulate moss. Higher value = slower.
		#Range: > 1
		mossyRockSpreadRate = 20

	[blocks.chest]
		#The largest (inclusive) size of an item that is allowed in a chest.
		#Allowed Values: TINY, VERY_SMALL, SMALL, NORMAL, LARGE, VERY_LARGE, HUGE
		chestMaximumItemSize = "LARGE"

	[blocks.torch]
		#Number of ticks required for a torch to burn out (1000 = 1 in game hour = 50 seconds), default is 72 hours. Set to -1 to disable torch burnout.
		#Range: > -1
		torchTicks = 72000

	[blocks.candle]
		#Number of ticks required for a candle to burn out (1000 = 1 in game hour = 50 seconds), default is 264 hours. Set to -1 to disable candle burnout.
		#Range: > -1
		candleTicks = 264000

	[blocks.charcoal]
		#Number of ticks required for charcoal pit to complete. (1000 = 1 in game hour = 50 seconds), default is 18 hours.
		#Range: > -1
		charcoalTicks = 18000

	[blocks.pitKiln]
		#Number of ticks required for a pit kiln to burn out. (1000 = 1 in game hour = 50 seconds), default is 8 hours.
		#Range: > 20
		pitKilnTicks = 8000
		#The maximum temperature which a pit kiln reaches. (1200 = Yellow**, 1600 = Brilliant White, for reference).
		#Range: > 0
		pitKilnTemperature = 1600

	[blocks.crucible]
		#Tank capacity of a crucible (in mB).
		#Range: 0 ~ 2147483645
		crucibleCapacity = 10000
		#A modifier for how fast fluid containers empty into crucibles. Containers will empty 1 mB every (this) number of ticks.
		#Range: > 1
		cruciblePouringRate = 2

	[blocks.anvil]
		#The number of pixels that the anvil's result may be off by, but still count as recipe completion. By default this requires pixel perfect accuracy.
		#Range: 0 ~ 150
		anvilAcceptableWorkRange = 0

	[blocks.barrel]
		#Tank capacity of a barrel (in mB).
		#Range: > 0
		barrelCapacity = 10000

	[blocks.composter]
		#Number of ticks required for a composter in normal conditions to complete. (24000 = 1 game day), default is 12 days.
		#Range: > 20
		composterTicks = 288000
		#Should the composter work less efficiently at high or low rainfalls?
		composterRainfallCheck = true

	[blocks.sluice]
		#Number of ticks required for a sluice to process an item. (20 = 1 second), default is 5 seconds.
		#Range: > 1
		sluiceTicks = 100

	[blocks.lamp]
		#Tank capacity of a lamp (in mB).
		#Range: 0 ~ 2147483645
		lampCapacity = 250

	[blocks.pumpkin]
		#Enables the knifing of pumpkins to carve them.
		enablePumpkinCarving = true
		#Number of ticks required for a jack 'o lantern to burn out (1000 = 1 in game hour = 50 seconds), default is 108 hours. Set to -1 to disable burnout.
		#Range: > -1
		jackOLanternTicks = 108000

	[blocks.bloomery]
		#Inventory capacity (in number of items per level of chimney) of the bloomery.
		#Range: > 1
		bloomeryCapacity = 8
		#The maximum number of levels that can be built in a bloomery multiblock, for added capacity.
		#Range: > 1
		bloomeryMaxChimneyHeight = 3

	[blocks.blastFurnace]
		#Inventory capacity (in number of items per level of chimney) of the blast furnace.
		#Range: > 1
		blastFurnaceCapacity = 4
		#Fluid capacity (in mB) of the output tank of the blast furnace.
		#Range: > 1
		blastFurnaceFluidCapacity = 10000
		#A multiplier for how fast the blast furnace consumes fuel. Higher values = faster fuel consumption.
		#Range: > 1
		blastFurnaceFuelConsumptionMultiplier = 4
		#The maximum number of levels that can be built in a blast furnace multiblock, for added capacity.
		#Range: > 1
		blastFurnaceMaxChimneyHeight = 5

[items]

	[items.smallVessel]
		#Tank capacity of a small vessel (in mB).
		#Range: 0 ~ 2147483645
		smallVesselCapacity = 3000
		#The largest (inclusive) size of an item that is allowed in a small vessel.
		#Allowed Values: TINY, VERY_SMALL, SMALL, NORMAL, LARGE, VERY_LARGE, HUGE
		smallVesselMaximumItemSize = "SMALL"

	[items.molds]
		#Tank capacity of a Ingot mold (in mB).
		#Range: 0 ~ 2147483645
		moldIngotCapacity = 100
		#Tank capacity of a Pickaxe Head mold (in mB).
		#Range: 0 ~ 2147483645
		moldPickaxeHeadCapacity = 100
		#Tank capacity of a Propick Head mold (in mB).
		#Range: 0 ~ 2147483645
		moldPropickHeadCapacity = 100
		#Tank capacity of a Axe Head mold (in mB).
		#Range: 0 ~ 2147483645
		moldAxeHeadCapacity = 100
		#Tank capacity of a Shovel Head mold (in mB).
		#Range: 0 ~ 2147483645
		moldShovelHeadCapacity = 100
		#Tank capacity of a Hoe Head mold (in mB).
		#Range: 0 ~ 2147483645
		moldHoeHeadCapacity = 100
		#Tank capacity of a Chisel Head mold (in mB).
		#Range: 0 ~ 2147483645
		moldChiselHeadCapacity = 100
		#Tank capacity of a Hammer Head mold (in mB).
		#Range: 0 ~ 2147483645
		moldHammerHeadCapacity = 100
		#Tank capacity of a Saw Blade mold (in mB).
		#Range: 0 ~ 2147483645
		moldSawBladeCapacity = 100
		#Tank capacity of a Javelin Head mold (in mB).
		#Range: 0 ~ 2147483645
		moldJavelinHeadCapacity = 100
		#Tank capacity of a Sword Blade mold (in mB).
		#Range: 0 ~ 2147483645
		moldSwordBladeCapacity = 200
		#Tank capacity of a Mace Head mold (in mB).
		#Range: 0 ~ 2147483645
		moldMaceHeadCapacity = 200
		#Tank capacity of a Knife Blade mold (in mB).
		#Range: 0 ~ 2147483645
		moldKnifeBladeCapacity = 100
		#Tank capacity of a Scythe Blade mold (in mB).
		#Range: 0 ~ 2147483645
		moldScytheBladeCapacity = 100

	[items.jug]
		#Tank capacity of a ceramic jug (in mB).
		#Range: 0 ~ 2147483645
		jugCapacity = 100
		#The chance a jug will break after drinking.
		#Range: 0.0 ~ 1.0
		jugBreakChance = 0.001

	[items.woodenBucket]
		#Tank capacity of a wooden bucket (in mB).
		#Range: 0 ~ 2147483645
		woodenBucketCapacity = 1000
		#Should the wooden bucket place source blocks?
		enableSourcesFromWoodenBucket = false

[mechanics]

	[mechanics.heat]
		#A multiplier for how fast items heat and cool. Higher = faster.
		#Range: 0.0 ~ 1.7976931348623157E308
		itemHeatingModifier = 1.0
		#Should hot item entities cool off when in contact with blocks like water or snow?
		coolHotItemEntities = true
		#Ticks between each time an item loses temperature when sitting on a cold block. 20 ticks = 1 second.
		#Range: > 1
		ticksBeforeItemCool = 10

	[mechanics.collapses]
		#Enable rock collapsing when mining raw stone blocks
		enableBlockCollapsing = true
		#Enable explosions causing immediate collapses.
		enableExplosionCollapsing = true
		#Enable land slides (gravity affected blocks) when placing blocks or on block updates.
		enableBlockLandslides = true
		#Enable chisels starting collapses
		enableChiselsStartCollapses = true
		#Chance for a collapse to be triggered by mining a block.
		#Range: 0.0 ~ 1.0
		collapseTriggerChance = 0.1
		#Chance for a block fo fall from mining collapse. Higher = mor likely.
		#Range: 0.0 ~ 1.0
		collapsePropagateChance = 0.55
		#Chance for a block to fall from an explosion triggered collapse. Higher = mor likely.
		#Range: 0.0 ~ 1.0
		collapseExplosionPropagateChance = 0.3
		#Minimum radius for a collapse
		#Range: 1 ~ 32
		collapseMinRadius = 3
		#Variance of the radius of a collapse. Total size is in [minRadius, minRadius + radiusVariance]
		#Range: 1 ~ 32
		collapseRadiusVariance = 16

	[mechanics.player]
		#If peaceful difficulty should still have vanilla-esque passive regeneration of health, food, and hunger
		enablePeacefulDifficultyPassiveRegeneration = false
		#A multiplier for passive exhaustion accumulation.
		#Exhaustion is the hidden stat which controls when you get hungry. In vanilla it is incremented by running and jumping for example. In TFC, exhaustion is added just by existing.
		#1.0 = A full hunger bar's worth of exhaustion every 2.5 days. Set to zero to disable completely.
		#Range: 0.0 ~ 100.0
		passiveExhaustionMultiplier = 1.0
		#A multiplier for how quickly the player gets thirsty.
		#The player loses thirst in sync with when they lose hunger. This represents how much thirst they lose. 0 = None, 100 = the entire thirst bar.
		#Range: 0.0 ~ 100.0
		thirstModifier = 8.0
		#Enables the player losing more thirst in hotter environments.
		enableThirstOverheating = true
		#How much thirst the player gains from drinking in the rain (standing outside in the rain and looking up) per tick.
		#Range: 0.0 ~ 100.0
		thirstGainedFromDrinkingInTheRain = 0.20833333333333334
		#A multiplier for how quickly the player regenerates health, under TFC's passive regeneration.
		#By default, the player regenerates 0.2 HP/second, or 0.6 HP/second when above 80% hunger and thirst, where 1 HP = 1/50 of a heart.
		#Range: 0.0 ~ 100.0
		naturalRegenerationModifier = 1.0
		#How much total hunger consumed is required to completely refresh the player's nutrition.
		#Player nutrition in TFC is calculated based on nutrition of the last few foods eaten - this is how many foods are used to calculate nutrition. By default, all TFC foods restore 4 hunger.
		#Range: > 1
		nutritionRotationHungerWindow = 80
		#How many hours should different foods ignore when trying to stack together automatically?
		#Food made with different creation dates doesn't stack by default, unless it's within a specific window. This is the number of hours that different foods will try and stack together at the loss of a little extra expiry time.
		#Range: 6 ~ 100
		foodDecayStackWindow = 6
		#A multiplier for food decay, or expiration times. Larger values will result in naturally longer expiration times.
		#Range: 0.0 ~ 1000.0
		foodDecayModifier = 1.0
		#Enables negative effects from carrying too many very heavy items, including potion effects.
		enableOverburdening = true

	[mechanics.vanillaChanges]
		#If vanilla bonemeal's instant-growth effect should be enabled.
		enableVanillaBonemeal = false
		#If true, vanilla's snow and ice formation mechanics will be used, and none of the TFC mechanics (improved snow and ice placement, snow stacking, icicle formation, passive snow or ice melting) will exist.
		enableVanillaWeatherEffects = false
		#If true, vanilla will attempt to spawn skeleton 'trap' horses during thunderstorms.
		enableVanillaSkeletonHorseSpawning = false
		#If true, enables the default vanilla behavior of mobs spawning with enchanted weapons sometimes.
		enableVanillaMobsSpawningWithEnchantments = false
		#If true, enables the default behavior of mobs sapwning with vanilla armor and weapons
		enableVanillaMobsSpawningWithVanillaEquipment = false
		#If true, golems can be built
		enableVanillaGolems = false
		#If true, vanilla monsters will spawn everywhere. This overrides the 'enableVanillaMonstersOnSurface' config option.
		enableVanillaMonsters = true
		#If true, vanilla monsters will spawn on the surface instead of just underground.
		enableVanillaMonstersOnSurface = false
		#If true, chicken jockies can spawn
		enableChickenJockies = false
		#If true, eggs can be thrown.
		enableVanillaEggThrowing = false
		#If true, drinking milk will clear potion effects and restore no nutrition, as in vanilla.
		enableVanillaDrinkingMilkClearsPotionEffects = false

	[mechanics.animals]

		[mechanics.animals.pig]
			#Max familiarity an adult may reach
			#Range: 0.0 ~ 1.0
			pigFamiliarityCap = 0.35
			#Days until animal reaches adulthood
			#Range: > 0
			pigAdulthoodDays = 80
			#Uses before animal becomes old and can no longer be used
			#Range: > 0
			pigUses = 60
			#Does the animal eat rotten food?
			pigEatsRottenFood = true
			#Length of pregnancy in days
			#Range: > 0
			pigGestationDays = 19
			#Max number of children born
			#Range: 0 ~ 100
			pigChildCount = 10

		[mechanics.animals.donkey]
			#Max familiarity an adult may reach
			#Range: 0.0 ~ 1.0
			donkeyFamiliarityCap = 0.35
			#Days until animal reaches adulthood
			#Range: > 0
			donkeyAdulthoodDays = 80
			#Uses before animal becomes old and can no longer be used
			#Range: > 0
			donkeyUses = 60
			#Does the animal eat rotten food?
			donkeyEatsRottenFood = false
			#Length of pregnancy in days
			#Range: > 0
			donkeyGestationDays = 19
			#Max number of children born
			#Range: 0 ~ 100
			donkeyChildCount = 1

		[mechanics.animals.mule]
			#Max familiarity an adult may reach
			#Range: 0.0 ~ 1.0
			muleFamiliarityCap = 0.35
			#Days until animal reaches adulthood
			#Range: > 0
			muleAdulthoodDays = 80
			#Uses before animal becomes old and can no longer be used
			#Range: > 0
			muleUses = 60
			#Does the animal eat rotten food?
			muleEatsRottenFood = false
			#Length of pregnancy in days
			#Range: > 0
			muleGestationDays = 19
			#Max number of children born
			#Range: 0 ~ 100
			muleChildCount = 1

		[mechanics.animals.horse]
			#Max familiarity an adult may reach
			#Range: 0.0 ~ 1.0
			horseFamiliarityCap = 0.35
			#Days until animal reaches adulthood
			#Range: > 0
			horseAdulthoodDays = 80
			#Uses before animal becomes old and can no longer be used
			#Range: > 0
			horseUses = 60
			#Does the animal eat rotten food?
			horseEatsRottenFood = false
			#Length of pregnancy in days
			#Range: > 0
			horseGestationDays = 19
			#Max number of children born
			#Range: 0 ~ 100
			horseChildCount = 1

		[mechanics.animals.cow]
			#Max familiarity an adult may reach
			#Range: 0.0 ~ 1.0
			cowFamiliarityCap = 0.35
			#Days until animal reaches adulthood
			#Range: > 0
			cowAdulthoodDays = 192
			#Uses before animal becomes old and can no longer be used
			#Range: > 0
			cowUses = 128
			#Does the animal eat rotten food?
			cowEatsRottenFood = true
			#Length of pregnancy in days
			#Range: > 0
			cowGestationDays = 58
			#Max number of children born
			#Range: 0 ~ 100
			cowChildCount = 2
			#Ticks until produce is ready
			#Range: > 0
			cowProduceTicks = 24000
			#Minimum familiarity [0-1] needed for produce. Set above 1 to disable produce.
			#Range: 0.0 ~ 3.4028234663852886E38
			cowMinProduceFamiliarity = 0.15

		[mechanics.animals.goat]
			#Max familiarity an adult may reach
			#Range: 0.0 ~ 1.0
			goatFamiliarityCap = 0.35
			#Days until animal reaches adulthood
			#Range: > 0
			goatAdulthoodDays = 96
			#Uses before animal becomes old and can no longer be used
			#Range: > 0
			goatUses = 60
			#Does the animal eat rotten food?
			goatEatsRottenFood = true
			#Length of pregnancy in days
			#Range: > 0
			goatGestationDays = 32
			#Max number of children born
			#Range: 0 ~ 100
			goatChildCount = 2
			#Ticks until produce is ready
			#Range: > 0
			goatProduceTicks = 72000
			#Minimum familiarity [0-1] needed for produce. Set above 1 to disable produce.
			#Range: 0.0 ~ 3.4028234663852886E38
			goatMinProduceFamiliarity = 0.15

		[mechanics.animals.yak]
			#Max familiarity an adult may reach
			#Range: 0.0 ~ 1.0
			yakFamiliarityCap = 0.35
			#Days until animal reaches adulthood
			#Range: > 0
			yakAdulthoodDays = 180
			#Uses before animal becomes old and can no longer be used
			#Range: > 0
			yakUses = 230
			#Does the animal eat rotten food?
			yakEatsRottenFood = false
			#Length of pregnancy in days
			#Range: > 0
			yakGestationDays = 64
			#Max number of children born
			#Range: 0 ~ 100
			yakChildCount = 1
			#Ticks until produce is ready
			#Range: > 0
			yakProduceTicks = 23500
			#Minimum familiarity [0-1] needed for produce. Set above 1 to disable produce.
			#Range: 0.0 ~ 3.4028234663852886E38
			yakMinProduceFamiliarity = 0.15

		[mechanics.animals.alpaca]
			#Max familiarity an adult may reach
			#Range: 0.0 ~ 1.0
			alpacaFamiliarityCap = 0.35
			#Days until animal reaches adulthood
			#Range: > 0
			alpacaAdulthoodDays = 98
			#Uses before animal becomes old and can no longer be used
			#Range: > 0
			alpacaUses = 128
			#Does the animal eat rotten food?
			alpacaEatsRottenFood = false
			#Length of pregnancy in days
			#Range: > 0
			alpacaGestationDays = 36
			#Max number of children born
			#Range: 0 ~ 100
			alpacaChildCount = 2
			#Ticks until produce is ready
			#Range: > 0
			alpacaProduceTicks = 120000
			#Minimum familiarity [0-1] needed for produce. Set above 1 to disable produce.
			#Range: 0.0 ~ 3.4028234663852886E38
			alpacaMinProduceFamiliarity = 0.15

		[mechanics.animals.sheep]
			#Max familiarity an adult may reach
			#Range: 0.0 ~ 1.0
			alpacaFamiliarityCap = 0.35
			#Days until animal reaches adulthood
			#Range: > 0
			alpacaAdulthoodDays = 56
			#Uses before animal becomes old and can no longer be used
			#Range: > 0
			alpacaUses = 60
			#Does the animal eat rotten food?
			alpacaEatsRottenFood = false
			#Length of pregnancy in days
			#Range: > 0
			alpacaGestationDays = 32
			#Max number of children born
			#Range: 0 ~ 100
			alpacaChildCount = 2
			#Ticks until produce is ready
			#Range: > 0
			alpacaProduceTicks = 168000
			#Minimum familiarity [0-1] needed for produce. Set above 1 to disable produce.
			#Range: 0.0 ~ 3.4028234663852886E38
			alpacaMinProduceFamiliarity = 0.15

		[mechanics.animals.muskOx]
			#Max familiarity an adult may reach
			#Range: 0.0 ~ 1.0
			muskOxFamiliarityCap = 0.35
			#Days until animal reaches adulthood
			#Range: > 0
			muskOxAdulthoodDays = 168
			#Uses before animal becomes old and can no longer be used
			#Range: > 0
			muskOxUses = 160
			#Does the animal eat rotten food?
			muskOxEatsRottenFood = false
			#Length of pregnancy in days
			#Range: > 0
			muskOxGestationDays = 64
			#Max number of children born
			#Range: 0 ~ 100
			muskOxChildCount = 1
			#Ticks until produce is ready
			#Range: > 0
			muskOxProduceTicks = 96000
			#Minimum familiarity [0-1] needed for produce. Set above 1 to disable produce.
			#Range: 0.0 ~ 3.4028234663852886E38
			muskOxMinProduceFamiliarity = 0.15

		[mechanics.animals.chicken]
			#Max familiarity an adult may reach
			#Range: 0.0 ~ 1.0
			chickenFamiliarityCap = 0.35
			#Days until animal reaches adulthood
			#Range: > 0
			chickenAdulthoodDays = 24
			#Uses before animal becomes old and can no longer be used
			#Range: > 0
			chickenUses = 100
			#Does the animal eat rotten food?
			chickenEatsRottenFood = true
			#Ticks until produce is ready
			#Range: > 0
			chickenProduceTicks = 30000
			#Minimum familiarity [0-1] needed for produce. Set above 1 to disable produce.
			#Range: 0.0 ~ 3.4028234663852886E38
			chickenMinProduceFamiliarity = 0.15
			#Ticks until egg is ready to hatch
			#Range: > 0
			chickenHatchDays = 8

		[mechanics.animals.duck]
			#Max familiarity an adult may reach
			#Range: 0.0 ~ 1.0
			duckFamiliarityCap = 0.35
			#Days until animal reaches adulthood
			#Range: > 0
			duckAdulthoodDays = 32
			#Uses before animal becomes old and can no longer be used
			#Range: > 0
			duckUses = 72
			#Does the animal eat rotten food?
			duckEatsRottenFood = false
			#Ticks until produce is ready
			#Range: > 0
			duckProduceTicks = 32000
			#Minimum familiarity [0-1] needed for produce. Set above 1 to disable produce.
			#Range: 0.0 ~ 3.4028234663852886E38
			duckMinProduceFamiliarity = 0.15
			#Ticks until egg is ready to hatch
			#Range: > 0
			duckHatchDays = 8

		[mechanics.animals.quail]
			#Max familiarity an adult may reach
			#Range: 0.0 ~ 1.0
			quailFamiliarityCap = 0.35
			#Days until animal reaches adulthood
			#Range: > 0
			quailAdulthoodDays = 22
			#Uses before animal becomes old and can no longer be used
			#Range: > 0
			quailUses = 48
			#Does the animal eat rotten food?
			quailEatsRottenFood = true
			#Ticks until produce is ready
			#Range: > 0
			quailProduceTicks = 28000
			#Minimum familiarity [0-1] needed for produce. Set above 1 to disable produce.
			#Range: 0.0 ~ 3.4028234663852886E38
			quailMinProduceFamiliarity = 0.15
			#Ticks until egg is ready to hatch
			#Range: > 0
			quailHatchDays = 8

